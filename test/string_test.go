/*
The MIT License

Copyright Â© 2025 John, Sing Dao, Siu <john.sd.siu@gmail.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// Generated by string_test_gen.sh
package helper

import (
	"fmt"
	"testing"

	"github.com/J-Siu/go-helper"
)

func Test_AnyToJsonMarshalSp_int_NewLine_true(t *testing.T) {
	var val int = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int8_NewLine_true(t *testing.T) {
	var val int8 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int16_NewLine_true(t *testing.T) {
	var val int16 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int32_NewLine_true(t *testing.T) {
	var val int32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int64_NewLine_true(t *testing.T) {
	var val int64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint_NewLine_true(t *testing.T) {
	var val uint = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint8_NewLine_true(t *testing.T) {
	var val uint8 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint16_NewLine_true(t *testing.T) {
	var val uint16 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint32_NewLine_true(t *testing.T) {
	var val uint32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint64_NewLine_true(t *testing.T) {
	var val uint64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_float32_NewLine_true(t *testing.T) {
	var val float32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_float64_NewLine_true(t *testing.T) {
	var val float64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int_NewLine_true(t *testing.T) {
	var val int = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int8_NewLine_true(t *testing.T) {
	var val int8 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int16_NewLine_true(t *testing.T) {
	var val int16 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int32_NewLine_true(t *testing.T) {
	var val int32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int64_NewLine_true(t *testing.T) {
	var val int64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint_NewLine_true(t *testing.T) {
	var val uint = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint8_NewLine_true(t *testing.T) {
	var val uint8 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint16_NewLine_true(t *testing.T) {
	var val uint16 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint32_NewLine_true(t *testing.T) {
	var val uint32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint64_NewLine_true(t *testing.T) {
	var val uint64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_float32_NewLine_true(t *testing.T) {
	var val float32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_float64_NewLine_true(t *testing.T) {
	var val float64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int_NewLine_false(t *testing.T) {
	var val int = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int8_NewLine_false(t *testing.T) {
	var val int8 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int16_NewLine_false(t *testing.T) {
	var val int16 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int32_NewLine_false(t *testing.T) {
	var val int32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int64_NewLine_false(t *testing.T) {
	var val int64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint_NewLine_false(t *testing.T) {
	var val uint = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint8_NewLine_false(t *testing.T) {
	var val uint8 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint16_NewLine_false(t *testing.T) {
	var val uint16 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint32_NewLine_false(t *testing.T) {
	var val uint32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint64_NewLine_false(t *testing.T) {
	var val uint64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_float32_NewLine_false(t *testing.T) {
	var val float32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_float64_NewLine_false(t *testing.T) {
	var val float64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int_NewLine_false(t *testing.T) {
	var val int = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int8_NewLine_false(t *testing.T) {
	var val int8 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int16_NewLine_false(t *testing.T) {
	var val int16 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int32_NewLine_false(t *testing.T) {
	var val int32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int64_NewLine_false(t *testing.T) {
	var val int64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint_NewLine_false(t *testing.T) {
	var val uint = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint8_NewLine_false(t *testing.T) {
	var val uint8 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint16_NewLine_false(t *testing.T) {
	var val uint16 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint32_NewLine_false(t *testing.T) {
	var val uint32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint64_NewLine_false(t *testing.T) {
	var val uint64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_float32_NewLine_false(t *testing.T) {
	var val float32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_float64_NewLine_false(t *testing.T) {
	var val float64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int_Ptr_NewLine_true(t *testing.T) {
	var val int = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int8_Ptr_NewLine_true(t *testing.T) {
	var val int8 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int16_Ptr_NewLine_true(t *testing.T) {
	var val int16 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int32_Ptr_NewLine_true(t *testing.T) {
	var val int32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int64_Ptr_NewLine_true(t *testing.T) {
	var val int64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint_Ptr_NewLine_true(t *testing.T) {
	var val uint = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint8_Ptr_NewLine_true(t *testing.T) {
	var val uint8 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint16_Ptr_NewLine_true(t *testing.T) {
	var val uint16 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint32_Ptr_NewLine_true(t *testing.T) {
	var val uint32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint64_Ptr_NewLine_true(t *testing.T) {
	var val uint64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_float32_Ptr_NewLine_true(t *testing.T) {
	var val float32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_float64_Ptr_NewLine_true(t *testing.T) {
	var val float64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int_Ptr_NewLine_true(t *testing.T) {
	var val int = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int8_Ptr_NewLine_true(t *testing.T) {
	var val int8 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int16_Ptr_NewLine_true(t *testing.T) {
	var val int16 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int32_Ptr_NewLine_true(t *testing.T) {
	var val int32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int64_Ptr_NewLine_true(t *testing.T) {
	var val int64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint_Ptr_NewLine_true(t *testing.T) {
	var val uint = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint8_Ptr_NewLine_true(t *testing.T) {
	var val uint8 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint16_Ptr_NewLine_true(t *testing.T) {
	var val uint16 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint32_Ptr_NewLine_true(t *testing.T) {
	var val uint32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint64_Ptr_NewLine_true(t *testing.T) {
	var val uint64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_float32_Ptr_NewLine_true(t *testing.T) {
	var val float32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_float64_Ptr_NewLine_true(t *testing.T) {
	var val float64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = "127\n"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int_Ptr_NewLine_false(t *testing.T) {
	var val int = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int8_Ptr_NewLine_false(t *testing.T) {
	var val int8 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int16_Ptr_NewLine_false(t *testing.T) {
	var val int16 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int32_Ptr_NewLine_false(t *testing.T) {
	var val int32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_int64_Ptr_NewLine_false(t *testing.T) {
	var val int64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint_Ptr_NewLine_false(t *testing.T) {
	var val uint = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint8_Ptr_NewLine_false(t *testing.T) {
	var val uint8 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint16_Ptr_NewLine_false(t *testing.T) {
	var val uint16 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint32_Ptr_NewLine_false(t *testing.T) {
	var val uint32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_uint64_Ptr_NewLine_false(t *testing.T) {
	var val uint64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_float32_Ptr_NewLine_false(t *testing.T) {
	var val float32 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_float64_Ptr_NewLine_false(t *testing.T) {
	var val float64 = 127
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int_Ptr_NewLine_false(t *testing.T) {
	var val int = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int8_Ptr_NewLine_false(t *testing.T) {
	var val int8 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int16_Ptr_NewLine_false(t *testing.T) {
	var val int16 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int32_Ptr_NewLine_false(t *testing.T) {
	var val int32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_int64_Ptr_NewLine_false(t *testing.T) {
	var val int64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint_Ptr_NewLine_false(t *testing.T) {
	var val uint = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint8_Ptr_NewLine_false(t *testing.T) {
	var val uint8 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint16_Ptr_NewLine_false(t *testing.T) {
	var val uint16 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint32_Ptr_NewLine_false(t *testing.T) {
	var val uint32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_uint64_Ptr_NewLine_false(t *testing.T) {
	var val uint64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %d, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_float32_Ptr_NewLine_false(t *testing.T) {
	var val float32 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_float64_Ptr_NewLine_false(t *testing.T) {
	var val float64 = 127
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = "127"
	fmt.Println("val = %d, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %f, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_int_Ptr_NewLine_true(t *testing.T) {
	var val *int = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_int8_Ptr_NewLine_true(t *testing.T) {
	var val *int8 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_int16_Ptr_NewLine_true(t *testing.T) {
	var val *int16 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_int32_Ptr_NewLine_true(t *testing.T) {
	var val *int32 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_int64_Ptr_NewLine_true(t *testing.T) {
	var val *int64 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_uint_Ptr_NewLine_true(t *testing.T) {
	var val *uint = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_uint8_Ptr_NewLine_true(t *testing.T) {
	var val *uint8 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_uint16_Ptr_NewLine_true(t *testing.T) {
	var val *uint16 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_uint32_Ptr_NewLine_true(t *testing.T) {
	var val *uint32 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_uint64_Ptr_NewLine_true(t *testing.T) {
	var val *uint64 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_float32_Ptr_NewLine_true(t *testing.T) {
	var val *float32 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_float64_Ptr_NewLine_true(t *testing.T) {
	var val *float64 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_int_Ptr_NewLine_true(t *testing.T) {
	var val *int = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_int8_Ptr_NewLine_true(t *testing.T) {
	var val *int8 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_int16_Ptr_NewLine_true(t *testing.T) {
	var val *int16 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_int32_Ptr_NewLine_true(t *testing.T) {
	var val *int32 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_int64_Ptr_NewLine_true(t *testing.T) {
	var val *int64 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_uint_Ptr_NewLine_true(t *testing.T) {
	var val *uint = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_uint8_Ptr_NewLine_true(t *testing.T) {
	var val *uint8 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_uint16_Ptr_NewLine_true(t *testing.T) {
	var val *uint16 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_uint32_Ptr_NewLine_true(t *testing.T) {
	var val *uint32 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_uint64_Ptr_NewLine_true(t *testing.T) {
	var val *uint64 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_float32_Ptr_NewLine_true(t *testing.T) {
	var val *float32 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_float64_Ptr_NewLine_true(t *testing.T) {
	var val *float64 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, true)
	var wanted string = helper.NIL_JSON + "\n"
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_int_Ptr_NewLine_false(t *testing.T) {
	var val *int = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_int8_Ptr_NewLine_false(t *testing.T) {
	var val *int8 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_int16_Ptr_NewLine_false(t *testing.T) {
	var val *int16 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_int32_Ptr_NewLine_false(t *testing.T) {
	var val *int32 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_int64_Ptr_NewLine_false(t *testing.T) {
	var val *int64 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_uint_Ptr_NewLine_false(t *testing.T) {
	var val *uint = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_uint8_Ptr_NewLine_false(t *testing.T) {
	var val *uint8 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_uint16_Ptr_NewLine_false(t *testing.T) {
	var val *uint16 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_uint32_Ptr_NewLine_false(t *testing.T) {
	var val *uint32 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_uint64_Ptr_NewLine_false(t *testing.T) {
	var val *uint64 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_float32_Ptr_NewLine_false(t *testing.T) {
	var val *float32 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalSp_NIL_float64_Ptr_NewLine_false(t *testing.T) {
	var val *float64 = nil
	var msg *string = helper.AnyToJsonMarshalSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_int_Ptr_NewLine_false(t *testing.T) {
	var val *int = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_int8_Ptr_NewLine_false(t *testing.T) {
	var val *int8 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_int16_Ptr_NewLine_false(t *testing.T) {
	var val *int16 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_int32_Ptr_NewLine_false(t *testing.T) {
	var val *int32 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_int64_Ptr_NewLine_false(t *testing.T) {
	var val *int64 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_uint_Ptr_NewLine_false(t *testing.T) {
	var val *uint = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_uint8_Ptr_NewLine_false(t *testing.T) {
	var val *uint8 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_uint16_Ptr_NewLine_false(t *testing.T) {
	var val *uint16 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_uint32_Ptr_NewLine_false(t *testing.T) {
	var val *uint32 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_uint64_Ptr_NewLine_false(t *testing.T) {
	var val *uint64 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_float32_Ptr_NewLine_false(t *testing.T) {
	var val *float32 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
func Test_AnyToJsonMarshalIndentSp_NIL_float64_Ptr_NewLine_false(t *testing.T) {
	var val *float64 = nil
	var msg *string = helper.AnyToJsonMarshalIndentSp(val, false)
	var wanted string = helper.NIL_JSON + ""
	fmt.Println("val = %p, AnyToJsonMarshalIndentSp() = " + *msg)
	if *msg != wanted {
		t.Fatalf(`val = %p, AnyToJsonMarshalIndentSp() = %s, not %s`, val, *msg, wanted)
	}
}
